.article
  %h1.article_title= @article.title
  .article_detail
    = image_tag 'default-avatar.png'
    %div
      -# - if  @article.user.present?
      -# Databaseでnull:falseで絶対に存在することを指定したので消す
      %p= @article.author_name
      %p= @article.display_created_at
    -# userが存在する場合
    - if user_signed_in? && current_user.has_written?(@article)
      .article_detail_actions
        .dropdown
          = image_tag 'actions.svg', class: 'dropbtn'
          .dropdown-content.mini
            = link_to '編集する', edit_article_path(@article)
            = link_to '削除する', article_path(@article) , data: { method: 'delete', confirm: '本当に削除してもよろしいですか' }
    -# exists サイン済み？記事を書いている？
    -# 存在するかどうかをチェックする
    -# @articleのidがarticlesのなかに存在するかどうか
  .article_content
    = @article.content
  .article_heart
    = image_tag 'heart.svg'

.article
  %h2 コメント一覧
  - @comments.each do |comment|
    .article_comment
      %p= comment.content
.container
  = link_to new_article_comment_path(@article) do
    .btn-secondary
      コメントを追加
  -# rautesを確認 article_idがあるから引数にarticleを渡している
